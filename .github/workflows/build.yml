name: build

env:
  DOTNET_VERSION: '5.0.401' # the dot net version to use
  SONAR_KEY: 'xembly_action-mapper'

on:
  push:
    branches:
      - '**'
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: xembly/workflow-manager@v1
        with:
          run: cancel
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: cache SonarCloud packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar

      - name: cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v2
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner

      - name: install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir -p ./.sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner

      - name: build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"${{ env.SONAR_KEY }}" /o:"xembly" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.exclusions="demos\**,*.Tests\**" /d:sonar.cs.xunit.reportsPaths="**\TestResults.trx" /d:sonar.cs.opencover.reportsPaths="**\coverage.opencover.xml"
          dotnet build -c Release
          dotnet test -c Release --no-build --logger:"trx;LogFileName=TestResults.trx" --collect:"XPlat Code Coverage" --settings coverlet.runsettings
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

  publish:
    if: (startsWith(github.ref, 'refs/heads/release/') || github.ref == 'refs/heads/main') && !contains(github.event.head_commit.message, '#nopublish')
    needs: build
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get Version
        id: get_version
        uses: QwerMike/xpath-action@v1
        with:
          filename: ./Xembly.ActionMapper/Xembly.ActionMapper.csproj
          expression: //PackageVersion[1]/text()[1]

      - name: Tag Release
        uses: negz/create-tag@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ steps.get_version.outputs.result }}
          message: ''

      - name: Pack NuGet Packages
        run: dotnet pack -c Release

      - name: Publish NuGet Packages
        run: dotnet nuget push .\**\*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
